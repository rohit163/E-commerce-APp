{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.fetchCollectionsFailure,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n      this.setState({\n        loading: false\n      });\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/rohit/OneDrive/Desktop/React/E-comm/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","setState","loading","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AACA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,aAAa,KAAK;AACvDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADiC;AAEvDC,EAAAA,OAAO,EAAEF;AAF8C,CAAL,CAA7C;AAIP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACU,uBADgC;AAEtDD,EAAAA,OAAO,EAAEE;AAF6C,CAAL,CAA5C;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AAEAW,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMX,aAAa,GAAGL,8BAA8B,CAACgB,QAAD,CAApD;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACC,aAAD,CAAxB,CAAR;AACA,WAAKY,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD,EAIGC,KAJH,CAISC,KAAK,IAAIT,QAAQ,CAACH,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAJ1B;AAKD,GATD;AAUD,CAXM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\r\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\r\nexport const fetchCollectionsStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionMap => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionMap\r\n});\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n  type: ShopActionTypes.fetchCollectionsFailure,\r\n  payload: errorMessage\r\n});\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return dispatch => {\r\n    const collectionRef = firestore.collection('collections');\r\n    dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef.get().then(snapshot => {\r\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\r\n      dispatch(fetchCollectionsSuccess(collectionMap));\r\n      this.setState({ loading: false });\r\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}
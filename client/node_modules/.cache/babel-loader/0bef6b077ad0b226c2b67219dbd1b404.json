{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am Fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n  } catch (error) {} // collectionRef.get().then(snapshot => {\n  //   const collectionMap = convertCollectionSnapshotToMap(snapshot);\n  //   dispatch(fetchCollectionsSuccess(collectionMap));\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/rohit/OneDrive/Desktop/React/E-comm/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["call","put","takeEvery","takeLatest","ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMhB,IAAI,CAACM,8BAAD,EAAiCQ,QAAjC,CAAjC;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc,CAEf,CATsC,CAWvC;AACA;AACA;AACA;;AAED;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,SAAS,CAACE,eAAe,CAACe,uBAAjB,EAA0CV,qBAA1C,CAAf;AACD","sourcesContent":["import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.types';\r\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log('I am Fired');\r\n\r\n  try {\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\r\n  } catch (error) {\r\n\r\n  }\r\n\r\n  // collectionRef.get().then(snapshot => {\r\n  //   const collectionMap = convertCollectionSnapshotToMap(snapshot);\r\n  //   dispatch(fetchCollectionsSuccess(collectionMap));\r\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\r\n}"]},"metadata":{},"sourceType":"module"}